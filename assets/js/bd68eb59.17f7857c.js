"use strict";(self.webpackChunkswiftui_realm_app=self.webpackChunkswiftui_realm_app||[]).push([[129],{4137:(e,t,o)=>{o.d(t,{Zo:()=>c,kt:()=>m});var r=o(7294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,r,n=function(e,t){if(null==e)return{};var o,r,n={},a=Object.keys(e);for(r=0;r<a.length;r++)o=a[r],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)o=a[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var p=r.createContext({}),l=function(e){var t=r.useContext(p),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},c=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var o=e.components,n=e.mdxType,a=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=l(o),d=n,m=u["".concat(p,".").concat(d)]||u[d]||h[d]||a;return o?r.createElement(m,i(i({ref:t},c),{},{components:o})):r.createElement(m,i({ref:t},c))}));function m(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=o.length,i=new Array(a);i[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[u]="string"==typeof e?e:n,i[1]=s;for(var l=2;l<a;l++)i[l]=o[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,o)}d.displayName="MDXCreateElement"},6676:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=o(7462),n=(o(7294),o(4137));const a={},i="The text operator",s={unversionedId:"search-operators/text",id:"search-operators/text",title:"The text operator",description:"The text operator is used to performs a full-text search using the analyzer that you specify in the index configuration. It is used to search for words or phrases in the full-text fields of your documents.",source:"@site/docs/5-search-operators/02-text.mdx",sourceDirName:"5-search-operators",slug:"/search-operators/text",permalink:"/search-party-lab/docs/search-operators/text",draft:!1,editUrl:"https://github.com/mongodb-developer/search-party-lab/blob/main/docs/5-search-operators/02-text.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Intro to Search operators",permalink:"/search-party-lab/docs/search-operators/intro"},next:{title:"The phrase operator",permalink:"/search-party-lab/docs/search-operators/phrase"}},p={},l=[{value:"The <code>fuzzy</code> property",id:"the-fuzzy-property",level:2},{value:"The <code>synonyms</code> property",id:"the-synonyms-property",level:2}],c=(u="Link",function(e){return console.warn("Component "+u+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.kt)("div",e)});var u;const h={toc:l},d="wrapper";function m(e){let{components:t,...o}=e;return(0,n.kt)(d,(0,r.Z)({},h,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"the-text-operator"},"The ",(0,n.kt)("inlineCode",{parentName:"h1"},"text")," operator"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"text")," operator is used to performs a full-text search using the analyzer that you specify in the index configuration. It is used to search for words or phrases in the full-text fields of your documents."),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"text")," operator uses the ",(0,n.kt)("inlineCode",{parentName:"p"},"OR")," operator to combine the search terms. For example, if you search for ",(0,n.kt)("inlineCode",{parentName:"p"},"Joy of Cooking"),", the search will return all documents that contain either ",(0,n.kt)("inlineCode",{parentName:"p"},"Joy"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"of"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"Cooking")," or a combination of those."),(0,n.kt)("admonition",{type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"This can sometimes be the desired outcome, but it might also return a lot of undesired results. Those documents containing the word ",(0,n.kt)("inlineCode",{parentName:"p"},"of"),", for example, are most likely not relevant to your search.")),(0,n.kt)("p",null,"We've already covered the ",(0,n.kt)("inlineCode",{parentName:"p"},"path")," property, but there are other properties that you can use with the ",(0,n.kt)("inlineCode",{parentName:"p"},"text")," operator."),(0,n.kt)("p",null,"The full definition of the text operator goes as follow. More details can be found in the ",(0,n.kt)(c,{to:"https://www.mongodb.com/docs/atlas/atlas-search/text/",mdxType:"Link"},"documentation"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'{\n  $search: {\n    "index": <index name>, // optional, defaults to "default"\n    "text": {\n      "query": "<search-string>",\n      "path": "<field-to-search>",\n      "fuzzy": <options>,\n      "score": <options>,\n      "synonyms": "<synonyms-mapping-name>"\n    }\n  }\n}\n')),(0,n.kt)("p",null,"Let's take a look at each of these properties."),(0,n.kt)("h2",{id:"the-fuzzy-property"},"The ",(0,n.kt)("inlineCode",{parentName:"h2"},"fuzzy")," property"),(0,n.kt)("p",null,"Fuzzy search is a technique that allows you to search for terms that are similar to the one you are looking for. It is useful when your users might make typos or spelling mistakes in their search queries."),(0,n.kt)("p",null,"There are many options you can use with the ",(0,n.kt)("inlineCode",{parentName:"p"},"fuzzy")," property, and you can find out more in the docs. For now, we'll focus on the ",(0,n.kt)("inlineCode",{parentName:"p"},"maxEdits")," option. MaxEdits will specify the number of one character edits that can be made to find a match."),(0,n.kt)("p",null,"For example, if you search for ",(0,n.kt)("inlineCode",{parentName:"p"},"Alice"),", you should find the book ",(0,n.kt)("em",{parentName:"p"},"Alice in Wonderland"),". However, if you make one, or multiple typos, such as ",(0,n.kt)("inlineCode",{parentName:"p"},"Alyse"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"Alise"),", or ",(0,n.kt)("inlineCode",{parentName:"p"},"Allice"),", you will not find the book. This is where the ",(0,n.kt)("inlineCode",{parentName:"p"},"maxEdits")," option comes in handy. With a maxEdits of 1, you will find the book even if you make one typo."),(0,n.kt)("h2",{id:"the-synonyms-property"},"The ",(0,n.kt)("inlineCode",{parentName:"h2"},"synonyms")," property"),(0,n.kt)("p",null,"The synonyms property allows you to specify a mapping of synonyms that will be used in your search. For example, if you search for ",(0,n.kt)("inlineCode",{parentName:"p"},"car"),", you might want to find documents that contain the word ",(0,n.kt)("inlineCode",{parentName:"p"},"automobile")," as well. You can specify a mapping of synonyms in your index configuration, and then use the ",(0,n.kt)("inlineCode",{parentName:"p"},"synonyms")," property in your search query to use that mapping."))}m.isMDXComponent=!0}}]);