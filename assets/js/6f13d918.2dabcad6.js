"use strict";(self.webpackChunkswiftui_realm_app=self.webpackChunkswiftui_realm_app||[]).push([[4024],{4137:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>h});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),p=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||a;return n?o.createElement(h,i(i({ref:t},l),{},{components:n})):o.createElement(h,i({ref:t},l))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[u]="string"==typeof e?e:r,i[1]=c;for(var p=2;p<a;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5752:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var o=n(7462),r=(n(7294),n(4137));const a={},i="\ud83e\uddb8 Using OpenAI",c={unversionedId:"vector-search/openai",id:"vector-search/openai",title:"\ud83e\uddb8 Using OpenAI",description:"OpenAI is a company that develops AI models for natural language processing. They offer a free API that you can use to create embeddings for your documents. The API is called OpenAI's Embedding API.",source:"@site/docs/7-vector-search/5-openai.mdx",sourceDirName:"7-vector-search",slug:"/vector-search/openai",permalink:"/search-party-lab/docs/vector-search/openai",draft:!1,editUrl:"https://github.com/mongodb-developer/search-party-lab/blob/main/docs/7-vector-search/5-openai.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Create Vector Search indexes",permalink:"/search-party-lab/docs/vector-search/create-index"},next:{title:"Add semantic search to your application",permalink:"/search-party-lab/docs/vector-search/add-to-app"}},s={},p=[{value:"Create an OpenAI account and get an API key",id:"create-an-openai-account-and-get-an-api-key",level:2},{value:"Create embeddings for documents",id:"create-embeddings-for-documents",level:2},{value:"Create embeddings for the books",id:"create-embeddings-for-the-books",level:2},{value:"Querying with vectors",id:"querying-with-vectors",level:2},{value:"Configuring the application",id:"configuring-the-application",level:2}],l=(u="Screenshot",function(e){return console.warn("Component "+u+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)});var u;const d={toc:p},m="wrapper";function h(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"-using-openai"},"\ud83e\uddb8 Using OpenAI"),(0,r.kt)("p",null,"OpenAI is a company that develops AI models for natural language processing. They offer a free API that you can use to create embeddings for your documents. The API is called ",(0,r.kt)("a",{parentName:"p",href:"https://platform.openai.com/docs/api-reference/embeddings"},"OpenAI's Embedding API"),"."),(0,r.kt)("p",null,"To get some embeddings using their API, you need to create an account and get an API key."),(0,r.kt)("h2",{id:"create-an-openai-account-and-get-an-api-key"},"Create an OpenAI account and get an API key"),(0,r.kt)("p",null,"To create an account, go to ",(0,r.kt)("a",{parentName:"p",href:"http://openai.com/"},"https://openai.com/"),' and click on the "Log In" button in the upper right corner. This will redirect you to the login page, where you\'ll have the option to sign up for their services.'),(0,r.kt)(l,{src:"img/screenshots/7-vector-search/3-create-vectors/1-signup.png",url:"https://openai.com/",alt:"The OpenAI signup page",mdxType:"Screenshot"}),(0,r.kt)("p",null,"Follow the instructions on the screen, and verify your email address."),(0,r.kt)("p",null,"Once you have an account, you can go to the ",(0,r.kt)("a",{parentName:"p",href:"https://platform.openai.com/account/api-keys"},"API keys page")," to get an API key."),(0,r.kt)("p",null,"From there, click on the ",(0,r.kt)("strong",{parentName:"p"},"Create new secret key")," button."),(0,r.kt)(l,{src:"img/screenshots/7-vector-search/3-create-vectors/2-create-key.png",url:"https://platform.openai.com/account/api-keys",alt:"The OpenAI API keys page",mdxType:"Screenshot"}),(0,r.kt)("p",null,'You\'ll be prompted to give you key a name. You can call it "MongoDB Vector Search Demo". Then click on the ',(0,r.kt)("strong",{parentName:"p"},"Create secret key")," button."),(0,r.kt)("p",null,"You will then be presented with your API key. Copy it and save it somewhere safe."),(0,r.kt)(l,{src:"img/screenshots/7-vector-search/3-create-vectors/3-api-key.png",url:"https://platform.openai.com/account/api-keys",alt:"The OpenAI API key",mdxType:"Screenshot"}),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Make sure you copy this key somewhere as you'll need it later on, and you won't be able to see it again.")),(0,r.kt)("p",null,"Now that you have an API key, you can use it to create embeddings for your documents."),(0,r.kt)("h2",{id:"create-embeddings-for-documents"},"Create embeddings for documents"),(0,r.kt)("p",null,"To create embeddings for your documents by sending curl commands to the OpenAI API, you can use the following command."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'OPENAI_API_KEY=<YOUR_API_KEY>\ncurl https://api.openai.com/v1/embeddings \\\n  -H "Authorization: Bearer $OPENAI_API_KEY" \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "input": "The food was delicious and the waiter...",\n    "model": "text-embedding-ada-002"\n  }\'\n')),(0,r.kt)("p",null,"You can find more information about the API in the ",(0,r.kt)("a",{parentName:"p",href:"https://platform.openai.com/docs/api-reference/embeddings"},"OpenAI documentation"),"."),(0,r.kt)("h2",{id:"create-embeddings-for-the-books"},"Create embeddings for the books"),(0,r.kt)("p",null,"To create the embeddings for the books in your collection, you should run this curl command, or use the Node.js library, for each book. This process is somewhat time consuming, so we've already created them for you."),(0,r.kt)("p",null,"You can find the 1586 dimensions vector in ",(0,r.kt)("inlineCode",{parentName:"p"},"vectorizedPlot")," field of the books."),(0,r.kt)("p",null,"Because we already have the vectors for the books, we can use them with Vector Search."),(0,r.kt)("h2",{id:"querying-with-vectors"},"Querying with vectors"),(0,r.kt)("p",null,"To query the data, Vector Search will need to calculate the distance between the query vector and the vectors of the documents in the collection."),(0,r.kt)("p",null,"To do so, you will need to vectorize your query. You can use the same function to vectorize your query as well."),(0,r.kt)("p",null,"In the library application, we've created a function that will vectorize your query for you. You can find it in the ",(0,r.kt)("inlineCode",{parentName:"p"},"server/embeddings/openai.mjs")," file."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import OpenAI from 'openai';\n\nconst { OPENAI_API_KEY } = process.env;\n\nconst openai = new OpenAI({apiKey: OPENAI_API_KEY});\n\nconst getEmbeddings = async (text) => {\n  const embeddings = await openai.embeddings.create({\n    model: \"text-embedding-ada-002\",\n    input: text,\n  });\n\n  return embeddings?.data[0]?.embeddings;\n}\n\nexport default getTermEmbeddings;\n")),(0,r.kt)("h2",{id:"configuring-the-application"},"Configuring the application"),(0,r.kt)("p",null,"In your ",(0,r.kt)("inlineCode",{parentName:"p"},"server/.env")," file, you'll find a few variables that you can use to configure the application."),(0,r.kt)("p",null,"The first one is ",(0,r.kt)("inlineCode",{parentName:"p"},"EMBEDDINGS_SOURCE"),". It tells the application where to get the embeddings from. You can set it to ",(0,r.kt)("inlineCode",{parentName:"p"},"openai"),"."),(0,r.kt)("p",null,"Now that you have an OpenAI API key, you can then set the ",(0,r.kt)("inlineCode",{parentName:"p"},"EMBEDDING_KEY")," variable to your API key."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"EMBEDDINGS_SOURCE=openai\nEMBEDDING_KEY=sk-...\n")))}h.isMDXComponent=!0}}]);