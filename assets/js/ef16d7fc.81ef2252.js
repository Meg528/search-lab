"use strict";(self.webpackChunkswiftui_realm_app=self.webpackChunkswiftui_realm_app||[]).push([[464],{4137:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>m});var o=t(7294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,o,n=function(e,r){if(null==e)return{};var t,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var l=o.createContext({}),p=function(e){var r=o.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},c=function(e){var r=p(e.components);return o.createElement(l.Provider,{value:r},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return o.createElement(o.Fragment,{},r)}},f=o.forwardRef((function(e,r){var t=e.components,n=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(t),f=n,m=u["".concat(l,".").concat(f)]||u[f]||d[f]||a;return t?o.createElement(m,i(i({ref:r},c),{},{components:t})):o.createElement(m,i({ref:r},c))}));function m(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var a=t.length,i=new Array(a);i[0]=f;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s[u]="string"==typeof e?e:n,i[1]=s;for(var p=2;p<a;p++)i[p]=t[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}f.displayName="MDXCreateElement"},1866:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var o=t(7462),n=(t(7294),t(4137));const a={},i="The equals operator",s={unversionedId:"search-operators/equals",id:"search-operators/equals",title:"The equals operator",description:"The equals operator is used to search for a specific value in a field. It is similar to the match operator, but the operation will be performed by Lucene, and can be combined with other operators to refine results.",source:"@site/docs/5-search-operators/04-equals.mdx",sourceDirName:"5-search-operators",slug:"/search-operators/equals",permalink:"/search-party-lab/docs/search-operators/equals",draft:!1,editUrl:"https://github.com/mongodb-developer/search-party-lab/blob/main/docs/5-search-operators/04-equals.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"The phrase operator",permalink:"/search-party-lab/docs/search-operators/phrase"},next:{title:"The range operator",permalink:"/search-party-lab/docs/search-operators/range"}},l={},p=[],c=(u="Link",function(e){return console.warn("Component "+u+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.kt)("div",e)});var u;const d={toc:p},f="wrapper";function m(e){let{components:r,...t}=e;return(0,n.kt)(f,(0,o.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"the-equals-operator"},"The ",(0,n.kt)("inlineCode",{parentName:"h1"},"equals")," operator"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"equals")," operator is used to search for a specific value in a field. It is similar to the ",(0,n.kt)("inlineCode",{parentName:"p"},"match")," operator, but the operation will be performed by Lucene, and can be combined with other operators to refine results."),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"equals")," operator has the following syntax. You can find more explanation about it in the ",(0,n.kt)(c,{to:"",mdxType:"Link"},"documentation"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'{\n   $search: {\n      "index": <index name>, // optional, defaults to "default"\n      "equals": {\n         "path": "<field-to-search>",\n         "value": <boolean-value>|<objectId>|<number>|<date>,\n         "score": <score-options>\n      }\n   }\n}\n')),(0,n.kt)("p",null,"This could be useful if you wanted to query only for books that were published in a specific year."))}m.isMDXComponent=!0}}]);