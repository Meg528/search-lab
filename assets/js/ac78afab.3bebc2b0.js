"use strict";(self.webpackChunkswiftui_realm_app=self.webpackChunkswiftui_realm_app||[]).push([[16],{4137:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>m});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=n.createContext({}),p=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},c=function(e){var r=p(e.components);return n.createElement(l.Provider,{value:r},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(t),f=o,m=u["".concat(l,".").concat(f)]||u[f]||d[f]||a;return t?n.createElement(m,s(s({ref:r},c),{},{components:t})):n.createElement(m,s({ref:r},c))}));function m(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,s=new Array(a);s[0]=f;var i={};for(var l in r)hasOwnProperty.call(r,l)&&(i[l]=r[l]);i.originalType=e,i[u]="string"==typeof e?e:o,s[1]=i;for(var p=2;p<a;p++)s[p]=t[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},4955:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var n=t(7462),o=(t(7294),t(4137));const a={},s="The range operator",i={unversionedId:"search-operators/range",id:"search-operators/range",title:"The range operator",description:"The range operator is similar to equals, but works on ranges of values.",source:"@site/docs/5-search-operators/05-range.mdx",sourceDirName:"5-search-operators",slug:"/search-operators/range",permalink:"/search-lab/docs/search-operators/range",draft:!1,editUrl:"https://github.com/mongodb-developer/search-lab/blob/main/docs/5-search-operators/05-range.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"The equals operator",permalink:"/search-lab/docs/search-operators/equals"},next:{title:"Scoring",permalink:"/search-lab/docs/search-operators/scoring"}},l={},p=[],c=(u="Link",function(e){return console.warn("Component "+u+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)});var u;const d={toc:p},f="wrapper";function m(e){let{components:r,...t}=e;return(0,o.kt)(f,(0,n.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"the-range-operator"},"The ",(0,o.kt)("inlineCode",{parentName:"h1"},"range")," operator"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"range")," operator is similar to ",(0,o.kt)("inlineCode",{parentName:"p"},"equals"),", but works on ranges of values."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"range")," operator has the following syntax. You can find more explanation about it in the ",(0,o.kt)(c,{to:"https://www.mongodb.com/docs/atlas/atlas-search/range/",mdxType:"Link"},"documentation"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'{\n   "$search": {\n      "index": <index name>, // optional, defaults to "default"\n      "range": {\n         "path": "<field-to-search>",\n         "gt | gte": <value-to-search>,\n         "lt | lte": <value-to-search>,\n         "score": <score-options>\n      }\n   }\n}\n')),(0,o.kt)("p",null,"This could be useful if you wanted to query only for books that have a range of pages. Say you only want books between 100 and 300 pages, you could use the ",(0,o.kt)("inlineCode",{parentName:"p"},"range")," operator to refine your results."))}m.isMDXComponent=!0}}]);