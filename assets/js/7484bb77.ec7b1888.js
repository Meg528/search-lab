"use strict";(self.webpackChunkswiftui_realm_app=self.webpackChunkswiftui_realm_app||[]).push([[1243],{4137:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>m});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=o.createContext({}),c=function(e){var t=o.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},l=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},h="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,s=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),h=c(r),d=n,m=h["".concat(s,".").concat(d)]||h[d]||u[d]||a;return r?o.createElement(m,p(p({ref:t},l),{},{components:r})):o.createElement(m,p({ref:t},l))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,p=new Array(a);p[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[h]="string"==typeof e?e:n,p[1]=i;for(var c=2;c<a;c++)p[c]=r[c];return o.createElement.apply(null,p)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},7519:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>p,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var o=r(7462),n=(r(7294),r(4137));const a={},p="The phrase operator",i={unversionedId:"search-operators/phrase",id:"search-operators/phrase",title:"The phrase operator",description:"The phrase operator is used to search for a group of words in a specific order. It is similar to the match operator, except that it will match anywhere in the text, not just at the beginning.",source:"@site/docs/5-search-operators/03-phrase.mdx",sourceDirName:"5-search-operators",slug:"/search-operators/phrase",permalink:"/search-lab/docs/search-operators/phrase",draft:!1,editUrl:"https://github.com/mongodb-developer/search-lab/blob/main/docs/5-search-operators/03-phrase.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"The text operator",permalink:"/search-lab/docs/search-operators/text"},next:{title:"The equals operator",permalink:"/search-lab/docs/search-operators/equals"}},s={},c=[{value:"The <code>slop</code> property",id:"the-slop-property",level:2}],l=(h="Link",function(e){return console.warn("Component "+h+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.kt)("div",e)});var h;const u={toc:c},d="wrapper";function m(e){let{components:t,...r}=e;return(0,n.kt)(d,(0,o.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"the-phrase-operator"},"The ",(0,n.kt)("inlineCode",{parentName:"h1"},"phrase")," operator"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"phrase")," operator is used to search for a group of words in a specific order. It is similar to the ",(0,n.kt)("inlineCode",{parentName:"p"},"match")," operator, except that it will match anywhere in the text, not just at the beginning."),(0,n.kt)("p",null,"The definition of the ",(0,n.kt)("inlineCode",{parentName:"p"},"phrase")," operator is. You can find more details on the phrase operator in the ",(0,n.kt)(l,{to:"https://www.mongodb.com/docs/atlas/atlas-search/phrase/",mdxType:"Link"},"official documentation")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'{\n  $search: {\n     "index": <index name>, // optional, defaults to "default"\n     "phrase": {\n       "query": "<search-string>",\n       "path": "<field-to-search>",\n       "score": <options>,\n       "slop": <distance-number>\n     }\n  }\n}\n')),(0,n.kt)("p",null,"The usage itself is very similar to how you would use the ",(0,n.kt)("inlineCode",{parentName:"p"},"text")," operator."),(0,n.kt)("h2",{id:"the-slop-property"},"The ",(0,n.kt)("inlineCode",{parentName:"h2"},"slop")," property"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"slop")," property is used to specify how far apart the words in the phrase can be. The default value is ",(0,n.kt)("inlineCode",{parentName:"p"},"0"),", which means that the words must be in the exact order specified in the query. If you set the value to ",(0,n.kt)("inlineCode",{parentName:"p"},"1"),", then the words can be one word apart, and so on."))}m.isMDXComponent=!0}}]);